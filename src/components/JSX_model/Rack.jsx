/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useThree } from "@react-three/fiber";
import { RigidBody } from "@react-three/rapier";

export function Rack(props) {
  const { nodes, materials } = useGLTF("models/rack.glb");
  const { viewport } = useThree();

  return (
    <RigidBody
      type="fixed"
      colliders="trimesh"
      position={[0.4, -viewport.height * 1.6, -0.03]}
      rotation={[0, -Math.PI / 2, 0]}
      restitution={-10}
      friction={0.2}
    >
      <group {...props} dispose={null} scale={[1.2, 0.9, 0.9]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials["Material.002"]}
          rotation={[Math.PI / 2, 0, 0]}
        >
          {" "}
          <meshStandardMaterial color={"#17a8ff"} toneMapped={false} />
        </mesh>
      </group>
    </RigidBody>
  );
}

useGLTF.preload("models/rack.glb");
